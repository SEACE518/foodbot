import streamlit as st
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity
import numpy as np
import time
import re
from datetime import datetime

# Configuration de la page
st.set_page_config(
    page_title="Chatbot Restaurant Africain üç≤",
    page_icon="üçõ",
    layout="wide",
    initial_sidebar_state="expanded"
)

# Style personnalis√©
st.markdown("""
    <style>
    body { background-color: #FFF8F0; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; }
    .stButton>button { background-color: #D2691E; color: white; border-radius: 12px; padding: 12px 24px; font-size: 18px; transition: background-color 0.3s ease; }
    .stButton>button:hover { background-color: #A0522D; }
    .stTextInput>div>div>input { border-radius: 12px; padding: 14px; font-size: 16px; border: 2px solid #D2691E; }
    .chat-bubble { background-color: #fff3e0; padding: 18px 24px; border-radius: 20px; margin-bottom: 15px; box-shadow: 0px 6px 12px rgba(210,105,30,0.3); max-width: 70%; }
    .user-bubble { background-color: #ffe0b2; text-align: right; margin-left: auto; }
    .suggestion-box { background-color: #fff3e0; border-left: 5px solid #D2691E; padding: 10px 15px; margin-bottom: 10px; border-radius: 8px; cursor: pointer; }
    .suggestion-box:hover { background-color: #f5deb3; }
    .sidebar .sidebar-content { background-color: #fbe9e7; }
    </style>
""", unsafe_allow_html=True)

# Liste des mots vides fran√ßais adapt√©s au domaine restaurant africain
FRENCH_STOPWORDS = {
    'le', 'la', 'les', 'de', 'des', 'du', 'un', 'une', 'et', '√†', 'en', 'pour', 'avec', 'sur', 'au', 'aux',
    'ce', 'ces', 'dans', 'par', 'plus', 'ne', 'pas', 'que', 'qui', 'se', 'sa', 'son', 'ses', 'nous', 'vous',
    'ils', 'elles', '√™tre', 'avoir', 'faire', 'comme', 'mais', 'ou', 'donc', 'or', 'ni', 'car',
    # Mots sp√©cifiques restauration africaine (exemples)
    'plat', 'plats', 'ingr√©dient', 'ingr√©dients', 'cuisson', 'r√©servation', 'menu',
    'commande', 'serveur', 'serveuse', 'client', 'clients', 'restaurant', 'table',
    'boisson', 'boissons', 'heure', 'heures', 'jour', 'jours', 'prix', 'tarif',
    'sp√©cialit√©', 'sp√©cialit√©s', 'africain', 'africaine', 'afrique', 'nourriture',
    'repas', 'd√©jeuner', 'd√Æner', 'go√ªter', 'service', 'commande', 'livraison',
    'allergie', 'allergies', 'intol√©rance', 'intol√©rances', 'v√©g√©tarien', 'v√©g√©tarienne',
    'vegan', 'sans', 'gluten', 'piment', '√©pic√©', 'douceur',
    # Plats africains
    'foutou', 'fufu', 'atti√©k√©', 'alloco', 'ceebu', 'j√´n', 'thiebou', 'dieune',
    't√¥', 'soupe', 'egusi', 'kedjenou', 'ayimolou', 'poulet', 'yassa', 'maf√©',
    'arachide', 'couscous', 'thi√©boudi√®ne', 'moambe', 'jollof', 'rice', 'bananes', 'plantains'
}

# Dictionnaire des descriptions des plats avec l'ic√¥ne de chef cuistot
dish_descriptions = {
    'foutou': "üë®‚Äçüç≥ P√¢te de banane plantain, manioc ou igname, accompagnant les sauces.",
    'atti√©k√©': "üë®‚Äçüç≥ Semoule de manioc ferment√©e, servie avec poisson grill√©.",
    'alloco': "üë®‚Äçüç≥ Bananes plantains frites, croustillantes et moelleuses.",
    'ceebu j√´n': "üë®‚Äçüç≥ Riz au poisson s√©n√©galais, avec l√©gumes et sauce tomate.",
    'kedjenou': "üë®‚Äçüç≥ Rago√ªt de poulet ivoirien cuit √† l'√©touff√©e avec l√©gumes et √©pices."
    # Ajoutez d'autres plats ici avec leurs descriptions
}

# Texte des connaissances int√©gr√© directement dans le code
knowledge_text = """
Foutou est une p√¢te traditionnelle africaine faite √† base de manioc, d'igname ou de banane plantain. Elle accompagne souvent les sauces √©pic√©es.
Atti√©k√© est un plat ivoirien pr√©par√© √† partir de semoule de manioc ferment√©e. Il est souvent servi avec du poisson grill√© et une salade fra√Æche.
Alloco d√©signe des bananes plantains frites, croustillantes √† l'ext√©rieur et moelleuses √† l'int√©rieur. C'est un accompagnement populaire en C√¥te d'Ivoire.
Ceebu J√´n, aussi appel√© Thi√©boudi√®ne, est le plat national s√©n√©galais compos√© de riz, poisson, l√©gumes et une sauce tomate √©pic√©e.
Le T√¥ est une bouillie √©paisse √† base de farine de mil ou de ma√Øs. Il est consomm√© avec des sauces vari√©es en Afrique de l'Ouest.
La soupe Egusi est une soupe nig√©riane riche √† base de graines de melon (egusi), souvent pr√©par√©e avec des l√©gumes et de la viande.
Le Kedjenou est un rago√ªt de poulet ivoirien cuit lentement avec des l√©gumes et des √©pices, tr√®s parfum√©.
L'Ayimolou est un plat togolais compos√© de riz et haricots, souvent accompagn√© de sauces locales.
Le Poulet Yassa est un plat s√©n√©galais de poulet marin√© au citron, oignons et moutarde, puis mijot√©.
Le Maf√© est un rago√ªt ou sauce √† base de p√¢te d'arachide, populaire en Afrique de l'Ouest, souvent servi avec du riz.
Le Couscous africain est un plat √† base de semoule de mil ou de ma√Øs, accompagn√© de l√©gumes et de viande.
Le Poulet Moambe est une sp√©cialit√© congolaise o√π le poulet est cuisin√© dans une sauce √† base de p√¢te d'arachide et de moambe.
Le Jollof Rice est un plat ouest-africain de riz √©pic√© cuit avec des tomates, oignons et piments.
Les bananes plantains frites (Alloco) sont souvent servies en accompagnement ou en snack.
Nos plats peuvent √™tre adapt√©s pour les r√©gimes v√©g√©tariens ou sans gluten sur demande.
Nous proposons √©galement un service de r√©servation de table et de livraison √† domicile.
Pour toute allergie ou intol√©rance, merci de nous en informer avant la commande.
Nos horaires d'ouverture sont de 11h00 √† 22h00 tous les jours.
Nous acceptons les paiements en esp√®ces et par carte bancaire.
N'h√©sitez pas √† demander des recommandations √† notre personnel pour d√©couvrir nos sp√©cialit√©s du jour.
"""

# Nettoyage du texte
def preprocess(text: str) -> str:
    text = text.lower()
    text = re.sub(r'[^\w\s]', ' ', text)
    words = [word for word in text.split() if word not in FRENCH_STOPWORDS]
    return ' '.join(words)

# Construction du corpus
@st.cache_data(show_spinner=False)
def build_corpus(text: str):
    sentences = [s.strip() for s in text.split('.') if s.strip()]
    processed = [preprocess(s) for s in sentences]
    vec = TfidfVectorizer()
    matrix = vec.fit_transform(processed)
    return sentences, matrix, vec

# Recherche de r√©ponse
def get_response(sentences: list[str], matrix: np.ndarray, vec: TfidfVectorizer, query: str, threshold: float = 0.1) -> tuple[str, float]:
    q_processed = preprocess(query)
    q_vec = vec.transform([q_processed])
    sims = cosine_similarity(q_vec, matrix).flatten()
    idx = int(np.argmax(sims))
    score = sims[idx]
    if score < threshold:
        return ("D√©sol√©, je n'ai pas compris votre demande. Pouvez-vous reformuler ou poser une autre question sur notre restaurant ou nos plats ?", score)
    return (sentences[idx], score)

# Suggestions de recherche en temps r√©el
def get_search_suggestions(query: str, sentences: list[str]) -> list[str]:
    suggestions = []
    for sentence in sentences:
        if query.lower() in sentence.lower():
            suggestions.append(sentence)
    return suggestions[:5]  # Limiter √† 5 suggestions

# Fonction principale
def main():
    # Initialiser l'historique du feedback si ce n'est pas d√©j√† fait
    if 'feedback_history' not in st.session_state:
        st.session_state.feedback_history = []

    # Sidebar
    with st.sidebar:
        st.image("https://cdn-icons-png.flaticon.com/512/1046/1046784.png", width=120)  # Image cuisine africaine
        st.title("Chatbot Restaurant Africain")
        st.write("---")
        st.write("### üìö √Ä propos")
        st.info("Cet assistant vous aide √† d√©couvrir notre menu, r√©server une table, et r√©pondre √† vos questions sur nos sp√©cialit√©s africaines.")
        st.write("---")
        st.write(f"üóìÔ∏è **Date :** {datetime.now().strftime('%d/%m/%Y')}")

    st.title("ü§ñ Votre assistant culinaire africain")
    st.write("Posez vos questions sur nos plats, horaires, r√©servations, et plus encore !")

    # Avertissement
    st.warning("‚ö†Ô∏è Ce chatbot fournit des informations g√©n√©rales. Pour toute demande sp√©cifique, contactez-nous directement.")

    # Construction du corpus √† partir du texte int√©gr√©
    sentences, matrix, vec = build_corpus(knowledge_text)

    # Zone de saisie
    with st.form(key='question_form', clear_on_submit=True):
        question = st.text_input("üí¨ Posez votre question :", placeholder="Ex: Quels sont les ingr√©dients de l'atti√©k√© ?")
        
        # Suggestions en temps r√©el
        if question:
            suggestions = get_search_suggestions(question, sentences)
            if suggestions:
                st.write("### Suggestions :")
                for suggestion in suggestions:
                    st.markdown(f"<div class='suggestion-box'>{suggestion}</div>", unsafe_allow_html=True)

        submitted = st.form_submit_button("Envoyer üçΩÔ∏è")
    
    if submitted and question:
        # Animation de chargement
        with st.spinner('Recherche de la meilleure r√©ponse...'):
            time.sleep(1)  # pause naturelle
            response, score = get_response(sentences, matrix, vec, question)

        # Affichage styl√©
        st.markdown(f"<div class='chat-bubble user-bubble'>{question}</div>", unsafe_allow_html=True)
        st.markdown(f"<div class='chat-bubble'>{response}</div>", unsafe_allow_html=True)
        st.markdown(f"üîç *Score de pertinence :* `{round(score, 2)}`")
        st.info("‚ÑπÔ∏è **Note** : cette r√©ponse est informative uniquement.")

        # Recherche du plat dans la r√©ponse et affichage de la description avec l'ic√¥ne
        for dish, description in dish_descriptions.items():
            if dish in response.lower():
                st.write(description)
                break

if __name__ == "__main__":
    main()
